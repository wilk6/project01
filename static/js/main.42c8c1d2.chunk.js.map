{"version":3,"sources":["components/searchTown.js","components/weather.js","App.js","index.js"],"names":["SearchTown","setTown","useState","town1","setTown1","className","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","onClick","Weather","weather","src","icon","alt","name","temperature","feels_temp","pressure","humidity","library","add","faHome","App","setWeather","town","Api_url","useEffect","fetch","then","response","json","data","main","temp","feels_like","catch","error","console","href","size","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAEaA,G,MAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACfC,qBADe,mBAClCC,EADkC,KAC3BC,EAD2B,KAEzC,OACE,yBAAKC,UAAU,UACb,0BACEC,SAAU,SAACC,GACTA,EAAEC,mBAGJ,+BACE,2BACEC,KAAK,OACLC,YAAY,SACZC,SAAU,SAACJ,GACTH,EAASG,EAAEK,OAAOC,WAIxB,4BACEJ,KAAK,SACLK,QAAS,WACPb,EAAQE,KAHZ,cClBKY,EAAU,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,yBAAKX,UAAU,WACb,gCACG,IACD,yBAAKY,IAAG,2CAAsCD,EAAQE,KAA9C,WAA6DC,IAAI,UAE3E,2BACE,0CACCH,EAAQI,MAEX,6BACE,+CACCJ,EAAQK,YAFX,WAIA,2BACE,0DACCL,EAAQM,WAFX,WAIA,2BACE,kDACCN,EAAQO,SAFX,OAIA,2BACE,wDACCP,EAAQQ,SAFX,O,qBClBNC,IAAQC,IAAIC,KAEZ,IAyCeC,EAzCH,WAAO,IAAD,EACc1B,mBAAS,CACrCmB,YAAa,GACbH,KAAM,GACNE,KAAM,GACNE,WAAY,GACZC,SAAU,GACVC,SAAU,KAPI,mBACTR,EADS,KACAa,EADA,OASQ3B,mBAAS,YATjB,mBAST4B,EATS,KASH7B,EATG,KAUV8B,EAAO,2DAAuDD,EAAvD,wDAoBb,OAlBAE,qBACE,WACEC,MAAMF,GACHG,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLR,EAAW,CACTR,YAAagB,EAAKC,KAAKC,KACvBrB,KAAMmB,EAAKrB,QAAQ,GAAGE,KACtBE,KAAMiB,EAAKjB,KACXE,WAAYe,EAAKC,KAAKE,WACtBjB,SAAUc,EAAKC,KAAKf,SACpBC,SAAUa,EAAKC,KAAKd,cAGvBiB,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,QAEpC,CAACZ,IAGD,yBAAKzB,UAAU,aACb,uBAAGA,UAAU,OAAOuC,KAAK,2BACvB,kBAAC,IAAD,CAAiB1B,KAAM,CAAC,MAAO,QAAS2B,KAAK,QAE/C,kBAAC,EAAD,CAAY5C,QAASA,IACrB,kBAAC,EAAD,CAASe,QAASA,MCzCxB8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.42c8c1d2.chunk.js","sourcesContent":["import React, { useState } from \"react\"\r\n\r\nexport const SearchTown = ({ setTown }) => {\r\n  const [town1, setTown1] = useState()\r\n  return (\r\n    <div className='Search'>\r\n      <form\r\n        onSubmit={(e) => {\r\n          e.preventDefault()\r\n        }}\r\n      >\r\n        <label>\r\n          <input\r\n            type='text'\r\n            placeholder='Miasto'\r\n            onChange={(e) => {\r\n              setTown1(e.target.value)\r\n            }}\r\n          />\r\n        </label>\r\n        <button\r\n          type='submit'\r\n          onClick={() => {\r\n            setTown(town1)\r\n          }}\r\n        >\r\n          Search\r\n        </button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\"\r\n\r\nexport const Weather = ({ weather }) => {\r\n  return (\r\n    <div className='Weather'>\r\n      <figure>\r\n        {\" \"}\r\n        <img src={`http://openweathermap.org/img/wn/${weather.icon}@2x.png`} alt='blad' />\r\n      </figure>\r\n      <p>\r\n        <span>Miasto: </span>\r\n        {weather.name}\r\n      </p>\r\n      <asp>\r\n        <span>Temperatura: </span>\r\n        {weather.temperature} &#8451;\r\n      </asp>\r\n      <p>\r\n        <span>Temperatura odczuwalna: </span>\r\n        {weather.feels_temp} &#8451;\r\n      </p>\r\n      <p>\r\n        <span>Ciśnienie: </span>\r\n        {weather.pressure}hPa\r\n      </p>\r\n      <p>\r\n        <span>Wilgotność: </span>\r\n        {weather.humidity}%\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\nimport \"./App.css\"\nimport { SearchTown } from \"./components/searchTown\"\nimport { Weather } from \"./components/weather\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\"\nlibrary.add(faHome)\n\nconst App = () => {\n  const [weather, setWeather] = useState({\n    temperature: \"\",\n    icon: \"\",\n    name: \"\",\n    feels_temp: \"\",\n    pressure: \"\",\n    humidity: \"\",\n  })\n  const [town, setTown] = useState(\"Warszawa\")\n  const Api_url = `http://api.openweathermap.org/data/2.5/weather?q=${town}&units=metric&appid=92aec1912fb9a605ef4f50a1975508a0`\n\n  useEffect(\n    () => {\n      fetch(Api_url)\n        .then((response) => response.json())\n        .then((data) => {\n          setWeather({\n            temperature: data.main.temp,\n            icon: data.weather[0].icon,\n            name: data.name,\n            feels_temp: data.main.feels_like,\n            pressure: data.main.pressure,\n            humidity: data.main.humidity,\n          })\n        })\n        .catch((error) => console.error(error))\n    },\n    [town],\n  )\n  return (\n    <div className='container'>\n      <a className='Link' href='https://wilk6.github.io'>\n        <FontAwesomeIcon icon={[\"fas\", \"home\"]} size='3x' />\n      </a>\n      <SearchTown setTown={setTown} />\n      <Weather weather={weather} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}